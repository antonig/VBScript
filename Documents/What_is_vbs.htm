<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
</head>

<body>
  <h2>What is VBScript</h2>
<p>VBScript (Visual Basic Script) is an interpreted scripting language derived from Visual Basic developed by Microsoft in 1996 and shipped first in Windows NT and Windows 98. It can adopt diferent flavours.</p>
<ul>
    <li>As desktop script language under Windows Sctipting Host</li>
    <li>As as server side script language  in IIS'  Active Server Pages</li>
    <li>As an alternate client side script language in html files intended to be viewed in Internet Explorer (deprecated!). Better use ECMAScript!</li>
		<li>As one of the script languages available in the HTML Applications (HTA - Standalone apps based in web interface running in mshta.exe).</li>
    <li>As the main script language embedded in third party applications as </li>
<ul>
    <li> HP QuickTest Professional (QTP), now Unified Functional Terting (UFT) software tester </li>
    <li> Indusoft Web Studio SCADAs </li>
    <li> Siemens' WinCC User Interface development tool</li>
    <li> Altium Designer PCB designer tool</li>
    <li> Enterprise Architect UML visual modeling tool</li>
    <li> Rhinoceros visual modeling tool</li>
    <li> VanDyke Secure CRT secure telnet and terminal emulator</li>
    <li> M-Files inteligent information manager</li>
    <li> The GUI for the SAP entreprise resource planning software</li>
		<li> Microsoft Outlook 97</li>
    <li> ARCMap and ARCGis, map designing and geographical database software</li>
</ul>
</ul>

<p>  </p>
<h2> Pros and cons as a desktop scripting language running in Windows Scripting Host:</h2>
<p></p>
<p> </p>
<h3> Features: </h3>
<ul>
    <li>A script can run without installing additional software in Windows from  Windows 2000 to Windows 11.Some features may not be there in Windows XP or below</li>
    <li>Weakly typed variables. All variables are of type variant. A variant can be numeric, string, an array of variants or a pointer to an object.</li>
    <li>arrays can be created by enumerating its components (Array keyword)  </li>
    <li>Math functions and arithmetics are made in double precission 17 decimal positions of precision. </li>
    <li>Has true dynamic strings that can be up to 2E9 bytes long. To help with long strings a join keyword allows to convert an array of strings into a single string joined by separators in a way not slowed by garbage collection </li>
    <li>Can create classes (no inheritance or polymorphism) to encapsulate functions.Classes can be made into Windows Script Components, ActiveX-enabled script class that can be invoked by other COM-enabled applications</li>
    <li>Has built in regular expressions (not so complete as perl's, but better than original Unix's)</li>
    <li>Has a built in object dictionary (an associative array)</li>
    <li>Can interact with software as  ActiveX controls, and COM automation servers and components using late binding.</li>
    <ul>
     <li>Has built in access to SQL queries to any database having an ODBC driver installed. </li>
     <li>Built in SQL can search WMI, Windows Search,ASDI </li>
     <li>Access to Microsoft XML parser</li>
     <li>Access to ADODB.streams allowing to read and save text in different  codepages, convert between them </li>
     <li>If .NET is present it can access some handy containers as ArrayList, Stack or Queue </li>
     <li>Can acces the object model of applications having VBA as their scripting interface, allowing to control them from outside</li>
    </ul>
    <li>Good date-time functions. But no UTC support</li>
    <li>Support to Locale change (decimal separator, first day of week..)</li>
    <li>Supports named command line arguments allowing easy parsing.</li>
		<li>Error reporting including the line number.</li>
    <li>while,for each
		<li>Can run other non-COM apps, sending input to their sdin capturing their stdout live and getting their exit code at the end</li>
    
</ul>

<p> </p>
<h3> Cons:</h3>
<ul>
    <li>The acces to files is only sequential (text or binary), with no random access. </li>
		<li>Variants use a minimum of 16 bytes. A boolean value is 16 bytes </li>
    <li>In boolean variables false is 0, not false is -1.</li>
    <li>There are no shift operations on bits. * and  \ (integer division) must be used. </li>
    <li> Before performing \ MOD AND OR XOR NOT operators the double precision numbers are converted to a 32 bit SIGNED integer, so the sign bit must be dealed separately in bit twiddling to avoid funny results </li> 
    <li>No shift left - shift right, integer division and product must be used </li>
    <li>No preprocessor support, no include, conditional compiling</li>
    <li>No json support. </li>
    <li>Arrays are static, REDIM PRESERVE must be used to change its size, no push-pop.</li>
		
    <li>No wilcards are accepted in the filenames passed to folder/file handling functions.</li>
    <li>It has not been given new features since Windows XP </li>
    <li>Spotty Unicode support ascw and chrw. Only UTF32. ODBC Streams allow conversion of text fies to UTF8</li>
    <li>Strings don't allow indexing on write on them, to modify a string :
    <ul> <li> placeholders + Replace,</li><li> regex must be used.</li><li> Or the string has to be built by concatenation</li></ul></li>
    <li>Clumsy string indexing for reading asc(mid(s,i,1)) at the place of s[i]</li>
    <li>No way to build a windows form, the official way is to write some html to a file and call Internet Explorer to display it and get user selections from it. </li>
    <li>Windows from XP to W8.1 did'nt support ANSI escape codes  so a console app using them will display garbage on these OS versions.</li>
    <li>It can't get single characters from the keyboard, any user input must be terminated by enter. No shooting games!</li>
    <li>It can't get mouse input, except clicks in buttons in the the two built-in forms MessageBox and  (text)InputBox</li>
		<li>Windows can default to two different runtimes Wscript and Cscript. In Wscript not all scripts will run. The main difference:</li>
		<ul>
     <li>Wscript does'nt open a console, </li>
     <li>Wscript do not have access to the standard streams stdin,stdout and stderr, </li>
     <li>Wscript can't be stopped with Ctrl-C.</li>
		 <li>Wscript.echo writes to console in CScript but in WScript it opens a generic MessageBox that must be acknowledged for the program to continue </li>
		<li>The Wscript forms (Messagebox, InputBox and Popup) are available just the same in Cscript</li>
		</ul>
    <li>No access to a graphics screen, a file must be created and viewed in an external viewer (BMP or HTML including SVG), or  ASCII (ANSI) art must be used. </li>
    <li>No named or optional arguments in functions</li>
    <li>No register or user defined variables. Methodless classes are a workaround. There is no way of having a packed register for file I/O unless its built byte to byte as a string.</li>
    <li>No continue or goto keywords. It has exit do/for/sub/function</li>
    
	    <li>Sketchy error handling: only On Error Resume Next and the err object</li>
    <li>No formatted output equivalent to printf. Poor format functions, no align right</li>
    <li>Can't redimension or change console size or change charset.</li>
    <li>The requirement to type <i>set fso=CreateObject("Scripting.FileSystemObject")</i> before using any file handling method should be punished by law.</li>
		<li>Array base can't be changed fom 0</li>
    <li>No short circuit of logical operations. no iif</li>
		<li>Nothing, Null, Empty (uninitialized) three different null values to juggle with</li>
</ul>



</body></html>